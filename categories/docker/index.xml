<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on Juan Maria Nieves Gomez</title>
    <link>https://juanmarianieves.com/categories/docker/</link>
    <description>Recent content in docker on Juan Maria Nieves Gomez</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 15 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://juanmarianieves.com/categories/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Uso de RabbitMQ en .Net</title>
      <link>https://juanmarianieves.com/posts/2022/05/uso-de-rabbitmq-en-.net/</link>
      <pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://juanmarianieves.com/posts/2022/05/uso-de-rabbitmq-en-.net/</guid>
      <description>docker pull rabbitmq docker network create myrabbit docker run -d --network myrabbit --name rabbit -p 15672:15672 -p 5672:5672 rabbitmq rabbitmq-plugins enable rabbitmq_management private RabbitConsumer CreateConsumerForQueue(string queueName) {  RabbitConsumer RabbitConsumer = new RabbitConsumer() { QueueName = queueName };  InitChannel(RabbitConsumer, queueName);  RabbitConsumer.Consumer = new AsyncEventingBasicConsumer(RabbitConsumer.Channel);  RabbitConsumer.Consumer.Received += Consumer_Received;  RabbitConsumer.Channel.BasicConsume(queue: queueName,  autoAck: false,  consumer: RabbitConsumer.Consumer);  return RabbitConsumer; } private void InitChannel(RabbitConsumer rabbitConsumer,string queueName) {  ConnectionFactory ConnectionFactory = new ConnectionFactory() { DispatchConsumersAsync = true, HostName = _rabbitConfig.</description>
    </item>
    
  </channel>
</rss>
